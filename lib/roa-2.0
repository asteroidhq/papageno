roa4 table roa_main_4;
roa6 table roa_main_6;

protocol rpki __papageno_rpki {
	roa4 { table roa_main_4; };
	roa6 { table roa_main_6; };
	remote roa_tcp_server port roa_tcp_port;
	transport tcp;
}

function origin_check()
{
	case net.type {
		NET_IP4:	
			case roa_check(roa_main_4,net,bgp_path.last_nonaggregated) {
				ROA_INVALID:
#         		 		print "REJECTING: ",net.ip,"/",net.len," received from ",from,": ROA INVALID!";
               				bgp_large_community.add(REASON_ROA_INVALID);
               				return true;
				ROA_VALID:
       		        		bgp_large_community.add(TAG_ROA_VALID);
					accept;
				ROA_UNKNOWN:
               				bgp_large_community.add(TAG_ROA_UNKNOWN);
			}
		NET_IP6:
			case roa_check(roa_main_6,net,bgp_path.last_nonaggregated) {
				ROA_INVALID:
#         		 		print "REJECTING: ",net.ip,"/",net.len," received from ",from,": ROA INVALID!";
               				bgp_large_community.add(REASON_ROA_INVALID);
               				return true;
				ROA_VALID:
       		        		bgp_large_community.add(TAG_ROA_VALID);
					accept;
				ROA_UNKNOWN:
               				bgp_large_community.add(TAG_ROA_UNKNOWN);
			}
	}
	return false;
}
