#! /usr/bin/perl
# usage: update-filters [file]
# Defaults to use $PWD/bgp-peers.csv

use strict;
use File::Copy;

my $basedir=".";
my $bgpq=`which bgpq3`;
chomp $bgpq;

if ( $bgpq eq "") {
	die("Couldn't find bgpq3 executable, please install or update the value of \$bgpq in file $0\n");
}

my $force = 0;

if ($ARGV[0] eq "-f") { $force=1; } 

sub output_filter {
	my ($asn, $filter, $template, $version) = @_;
	my $query=$filter;
	$filter =~ tr/-/_/;
	my $basefile = "$basedir/includes/filters-v$version/$filter";
	if ( ( -s "$basefile.filter") && ($force!=1)) {
			my @stat=stat("$basefile.filter");
			if (time()-$stat[9] < 3600) { return }  
	}
	my $prefixset = `$bgpq -A -b -$version $query -l prefixes`;
	$template = lc($template);
	my $first_asn;
	if ($template ne "routeserver") {
		$first_asn = "if ! is_first_asn($asn) then reject";
	} else {
		$first_asn = "if is_first_asn($asn) then reject";
	}
	open (my $out, ">", "$basefile.tmp") or die "$!\n";
	print $out "# UPDATED AUTOMATICALLY DO NOT EDIT!\n# Last updated: ".localtime."\n\n";
	print $out "function in_".$filter."_".$version."()\nprefix set prefixes;\n{\n";
	print $out "$prefixset\nreturn net ~ prefixes;\n}\n\n";
	print $out "filter ".$filter."_".$version."\n{\n    if filter_$template() then reject;\n";
	print $out "    $first_asn;\n    if in_".$filter."_".$version."() then accept;\n    reject;\n}\n\n";
	close $out;
	move ("$basefile.tmp","$basefile.filter");
}

my %asset4_filter;

my @input;

@input=split(/\n/,`grep '#FILTERSET' $basedir/includes/peers-v4 | sort | uniq`);
foreach my $line (@input) {
	chomp $line;
	my (undef, $asn, $filter, $template) = split (";",$line);
	if ($asset4_filter{"$filter"} != 1 ) {
		$asset4_filter{"$filter"}=1;
		output_filter($asn, $filter, $template, "4");
	}
}

my %asset6_filter;

@input=split(/\n/,`grep '#FILTERSET' $basedir/includes/peers-v6 | sort | uniq`);
foreach my $line (@input) {
	chomp $line;
	my (undef, $asn, $filter, $template) = split (";",$line);
	if ($asset6_filter{"$filter"} != 1 ) {
		$asset6_filter{"$filter"}=1;
		output_filter($asn, $filter, $template, "6");
	}
}
